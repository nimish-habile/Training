CREATE OR REPLACE
PROCEDURE SP_POPULATE_LOCATION(
    P_USER_ID IN VARCHAR2)
IS
  V_ID VARCHAR2(36);
  V_NAME SRC_CENTERS.NAME%TYPE;
  V_IS_ACTIVE    NUMBER(1);
  V_IS_DEFAULT   NUMBER(1)   := NULL;
  V_START_TIME   TIMESTAMP   := TO_TIMESTAMP('09:00:00', 'HH24:MI:SS');
  V_END_TIME     TIMESTAMP   := TO_TIMESTAMP('17:00:00', 'HH24:MI:SS');
  V_CLASS_TIMING TIMESTAMP   := TO_TIMESTAMP('10:00:00', 'HH24:MI:SS');
  V_REGION_ID    VARCHAR2(36);
  V_ADDRESS_ID   VARCHAR2(36);
BEGIN
  FOR REC IN
  ( SELECT NAME, ACTIVE_STATUS, REGION, ADDRESS FROM SRC_CENTERS
  )
  LOOP
    V_ID                := SYS_GUID();
    V_NAME              := REC.NAME;
    IF REC.ACTIVE_STATUS = 'TRUE' THEN
      V_IS_ACTIVE       := 1;
    ELSE
      V_IS_ACTIVE := 0;
    END IF;
    SELECT ID INTO V_REGION_ID FROM TAR_REGION WHERE NAME = REC.REGION;
    SELECT ID INTO V_ADDRESS_ID FROM TAR_ADDRESS WHERE ADDRESS = REC.ADDRESS;
    INSERT
    INTO TAR_LOCATION
      (
        ID,
        NAME,
        IS_ACTIVE,
        IS_DEFAULT,
        START_TIME,
        END_TIME,
        CLASS_TIMING,
        REGION_ID,
        ADDRESS_ID,
        CREATED_BY,
        UPDATED_BY,
        DELETED_BY
      )
      VALUES
      (
        V_ID,
        V_NAME,
        V_IS_ACTIVE,
        V_IS_DEFAULT,
        V_START_TIME,
        V_END_TIME,
        V_CLASS_TIMING,
        V_REGION_ID,
        V_ADDRESS_ID,
        P_USER_ID,
        P_USER_ID,
        NULL
      );
    COMMIT;
  END LOOP;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
  ROLLBACK;
  RAISE;
END SP_POPULATE_LOCATION;
/
DECLARE
BEGIN
  SP_POPULATE_LOCATION('NIMISH');
END;
/